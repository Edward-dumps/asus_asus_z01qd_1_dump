#!/system/bin/sh

REG="/proc/driver/actuator_i2c_rw"
ON="/proc/driver/actuator_power"
STATE="/proc/driver/ois_vcm_enable"
DAC="/proc/driver/vcm"

DEBUG=0

function read_ois_value()
{
	echo $1 1 > $REG #dword
	cat $REG
}

function write_ois_value()
{
	echo $1 2 $2 > $REG #dword, kernel write at once
}

function write_dac()
{
	hex=$(printf "%04x" $1)
	[ $DEBUG -eq 1 ] && echo "convert $1 to $hex"
	set_value=0x$hex
	write_ois_value 0xFFFE $set_value

	[ $DEBUG -eq 1 ] && echo "write val is $set_value, reg val now is $(read_ois_value 0xFFFE), lens_pos is $(cat $DAC)"
}


if [ $# -ne 1 ]; then
	echo "Usage: adb shell $0 DAC_VALUE (Decimal, 1~4095)"
	exit 1
fi

if [ "$1" = "END" -o "$1" = "end" ]; then
	af_movable=$(cat $STATE)
	if [ $af_movable -eq 0 ]; then
		echo 1 > $STATE
		[ $DEBUG -eq 1 ] && echo "allow AF move lens"
	else
		[ $DEBUG -eq 1 ] && echo "AF can move lens already"
	fi
	exit 1
fi

if ! grep -Eq "^[0-9]+$" <<< $1; then
	echo "Please input decimal value!"
	exit 1
fi

if [ $1 -gt 4095 -o $1 -lt 1 ]; then
	echo "DAC value invalid! Range is [1,4095]"
	exit 1
fi

power_state=$(cat $ON)
if [ $power_state -eq 0 ]; then
	echo "Please power up Camera 0"
	exit 1
fi

af_movable=$(cat $STATE)
if [ $af_movable -eq 1 ]; then
	echo 0 > $STATE
	[ $DEBUG -eq 1 ] && echo "first, disallow AF move lens"
fi

write_dac $1
